repeat task.wait() until game:IsLoaded()
repeat task.wait() until game.Players
repeat task.wait() until game.Players.LocalPlayer
repeat task.wait() until game.Players.LocalPlayer:FindFirstChild("PlayerGui")

local player = game.Players.LocalPlayer
local stats = player:WaitForChild("Data")
local level = stats:WaitForChild("Level")
local points = stats:WaitForChild("Points")
local humanoid = player.Character:WaitForChild("Humanoid")
local flying = true -- Khởi tạo chế độ bay là bật

-- Hàm chọn phe hải tặc
local function selectPirate()
    local team = game:GetService("Teams"):FindFirstChild("Pirate")
    if team then
        player.Team = team
        print("Đã chọn phe Hải Tặc!")
    end
end

-- Hàm để bật/tắt chế độ bay
local function toggleFly()
    flying = not flying
    humanoid.PlatformStand = flying -- Ngăn cản rơi khi bay

    if flying then
        while flying do
            task.wait(0.1) -- Cập nhật vị trí mỗi 0.1 giây
            player.Character.HumanoidRootPart.Velocity = Vector3.new(0, 200, 0) -- Tốc độ bay
        end
    else
        humanoid.PlatformStand = false -- Cho phép rơi khi tắt bay
    end
end

-- Hàm tự động cộng điểm cho Melee
local function autoAssignPoints()
    while task.wait(5) do
        if points.Value > 0 then
            game:GetService("ReplicatedStorage").Remotes["AddPoint"]:InvokeServer("Melee")
        end
    end
end

-- Hàm tìm NPC và nhiệm vụ dựa trên level hiện tại
local function getQuestNPC()
    local questNPCs = {
        {levelRange = {1, 10}, npc = "Starter NPC", enemy = "Bandit"},
        {levelRange = {10, 20}, npc = "Pirate NPC", enemy = "Pirate"},
        {levelRange = {20, 30}, npc = "Marine NPC", enemy = "Marine"},
        {levelRange = {30, 50}, npc = "Saber NPC", enemy = "Saber"},
        {levelRange = {50, 70}, npc = "Buggy NPC", enemy = "Buggy"},
        {levelRange = {70, 100}, npc = "Brass NPC", enemy = "Brass"},
        {levelRange = {100, 150}, npc = "Crocodile NPC", enemy = "Crocodile"},
        {levelRange = {150, 200}, npc = "Hawkeye NPC", enemy = "Hawkeye"},
        {levelRange = {200, 300}, npc = "Don Krieg NPC", enemy = "Don Krieg"},
        {levelRange = {300, 400}, npc = "Luffy NPC", enemy = "Luffy"},
        {levelRange = {400, 500}, npc = "Magellan NPC", enemy = "Magellan"},
        {levelRange = {500, 600}, npc = "Akainu NPC", enemy = "Akainu"},
        {levelRange = {600, 700}, npc = "Final Boss", enemy = "BossEnemy"},
    }

    for _, quest in pairs(questNPCs) do
        if level.Value >= quest.levelRange[1] and level.Value <= quest.levelRange[2] then
            return quest
        end
    end
    return nil
end

-- Hàm tự động nhận nhiệm vụ và cày quái
local function autoFarm()
    while task.wait(1) do
        local currentQuest = getQuestNPC()

        if currentQuest then
            local questNPC = game.Workspace:FindFirstChild(currentQuest.npc)
            if questNPC and not player.PlayerGui.Main.Quest.Visible then
                -- Nhận nhiệm vụ
                game:GetService("ReplicatedStorage").Remotes["Quest"]:InvokeServer(questNPC.Name)
                print("Đã nhận nhiệm vụ từ: " .. currentQuest.npc)
            end

            -- Tìm và tiêu diệt quái
            for _, enemy in pairs(game.Workspace.Enemies:GetChildren()) do
                if enemy.Name == currentQuest.enemy and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                    -- Di chuyển đến quái và đứng trên đầu quái
                    player.Character.HumanoidRootPart.Position = enemy.HumanoidRootPart.Position + Vector3.new(0, 3, 0) -- Đứng trên đầu quái
                    task.wait(1) -- Chờ cho đến khi đến vị trí

                    -- Tấn công quái
                    game:GetService("ReplicatedStorage").Remotes["MeleeAttack"]:InvokeServer(enemy)
                end
            end
        end

        -- Kiểm tra level để chuyển sang Sea 2
        if level.Value >= 700 then
            moveToSecondSea()
            break
        end
    end
end

-- Hàm tự động chuyển qua Sea 2
local function moveToSecondSea()
    local secondSeaNPC = game.Workspace:FindFirstChild("Military Detective") -- Tên NPC chuyển Sea
    if secondSeaNPC then
        humanoid:MoveTo(secondSeaNPC.Position)
        task.wait(5)
        game:GetService("ReplicatedStorage").Remotes["Dialogue"]:InvokeServer(secondSeaNPC)
        print("Đã chuyển qua Sea 2")
    end
end

-- Bắt đầu script
selectPirate()
toggleFly() -- Bật bay tự động
spawn(autoAssignPoints)
spawn(autoFarm)

-- Phím tắt để bật/tắt bay (phím "E")
local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if input.KeyCode == Enum.KeyCode.E and not gameProcessedEvent then
        toggleFly()
    end
end)
